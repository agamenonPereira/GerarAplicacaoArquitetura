using System.ComponentModel.DataAnnotations.Schema;

namespace {{Sistema}}.Domain.Core.Models
{
    public abstract class Entity
    {
        [NotMapped]
        public virtual object IdToCompare { get; protected set; }

        public override bool Equals(object obj)
        {
            var compareTo = obj as Entity;
            if (ReferenceEquals(this, compareTo)) return true;
            if (ReferenceEquals(null, compareTo)) return false;
            return IdToCompare.Equals(compareTo.IdToCompare);
        }

        public static bool operator ==(Entity a, Entity b)
        {
            if (ReferenceEquals(a, null) && ReferenceEquals(b, null)) return true;
            if (ReferenceEquals(a, null) || ReferenceEquals(b, null)) return false;
            return a.Equals(b);
        }

        public static bool operator !=(Entity a, Entity b)
        {
            return !(a == b);
        }

        public override int GetHashCode()
        {
            return (GetType().GetHashCode() * 907) + IdToCompare.GetHashCode();
        }

        public override string ToString()
        {
            return GetType().Name + "[Id=" + IdToCompare.ToString() + "]";
        }

    }
}
